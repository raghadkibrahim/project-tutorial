---
subtitle: A living tutorial of the Law‑AI project
---

<hr>

### Introduction {.unnumbered}

> This book documents every step of the project so my dad can follow along — from data ingestion to evaluation.

::: callout-tip
**How to read this book** — The left sidebar lists parts and chapters chronologically. Each chapter shows the latest results; older runs are archived in the Progress appendix.
:::

- **Project repo:** {{< var book.repo-url >}}
- **Latest build:** Rendered on each push to `main`.

This project builds a legal‑AI stack around Arabic court verdicts. Objectives:

1. Clean and structure raw verdicts (facts, reasoning, verdict, statutes).
2. Build retrieval and analytics pipelines.
3. Evaluate embeddings and LLMs for precedent search and drafting.
4. Ship a transparent, reproducible pipeline.

We use Python in most chapters; code is baked into the pages, with caches for reproducibility.

### Dataset

This dataset contains comprehensive details about all verdicts generated by Dubai Courts judgements. It can be accessed from __[Dubai Pulse](https://www.dubaipulse.gov.ae/organisation/dubai-courts/service/courts-records?)__ which is the city's open data portal.

| **Variable** | **Description** | **Type** |
|:---|:---:|---:|
|  `case_subtype_code` | Number to identify the type of a case | `int` |
| `case_year` | Number reflect the year when the case is raised. | `int` |
| `case_serial_number` | Number reflects the case serial based on the code and year. | `int` |
| `decision_number` | Number to identify the judgment decision. | `int` |
| `judgment_date` | Verdict date | `DATE` |
| `recitals` | Judgment Text | `string` |
| `insertion_date` | Insertion date | `DATE` |
| `last_update_date` | last update date | `DATE` |

